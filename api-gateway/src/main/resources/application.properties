spring.application.name=API_GATEWAY
eureka.instance.client.serverUrl.defaultZone=http://localhost:8761/eureka/

server.port=9191
management.endpoints.web.exposure.include=*

## For automatic routing
## To use this approach, you need to add service name/id needs to be added in url
## http://localhost:9191/employee-service/api/employees
#spring.cloud.gateway.discovery.locator.enabled=true
#spring.cloud.gateway.discovery.locator.lower-case-service-id=true
#logging.level.org.springframework.cloud.gateway.handler.RoutePredicateHandlerMapping=DEBUG

## For manual routing
## Routes for Employee Service
spring.cloud.gateway.routes[0].id=EMPLOYEE-SERVICE
## use load balancer url lb://SERVICE-NAME instead of hardcoded url of your application
spring.cloud.gateway.routes[0].uri=lb://EMPLOYEE-SERVICE
spring.cloud.gateway.routes[0].predicates[0]=Path=/api/employees/**

## Routes for Department Service
spring.cloud.gateway.routes[1].id=DEPARTMENT-SERVICE
## use load balancer url lb://SERVICE-NAME instead of hardcoded url of your application
spring.cloud.gateway.routes[1].uri=lb://DEPARTMENT-SERVICE
spring.cloud.gateway.routes[1].predicates[0]=Path=/api/departments/**

## Routes for Department Service
spring.cloud.gateway.routes[2].id=ORGANIZATION-SERVICE
## use load balancer url lb://SERVICE-NAME instead of hardcoded url of your application
spring.cloud.gateway.routes[2].uri=lb://ORGANIZATION-SERVICE
spring.cloud.gateway.routes[2].predicates[0]=Path=/api/organizations/**

spring.zipkin.base-url=http://127.0.0.1:9411/

## http://localhost:9191/api/employees

spring.cloud.gateway.globalcors.corsConfigurations.[/**].allowedOrigins=*
spring.cloud.gateway.globalcors.corsConfigurations.[/**].allowedMethods=GET,POST,PUT,DELETE